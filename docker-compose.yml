services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # Command assumes manage.py is found relative to WORKDIR in Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      # Mount entire project root
      - .:/workspaces/resume-maker-react
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://gvamsi:1113@db:5432/resume_gen_db

  website:
    build:
      context: ./website
      dockerfile: Dockerfile
      target: build-stage
    volumes:
      # Mount entire project root
      - .:/workspaces/resume-maker-react
      # Keep node_modules isolated RELATIVE TO NEW MOUNT
      - /workspaces/resume-maker-react/website/node_modules
      # --- END CHANGE ---
    ports:
      - "5173:5173"
    working_dir: /workspaces/resume-maker-react/website
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    depends_on:
      - backend
    environment:
      VITE_API_BASE_URL: http://backend:8000/api
      # CHOKIDAR_USEPOLLING=true

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: resume_gen_db
      POSTGRES_USER: gvamsi
      POSTGRES_PASSWORD: 1113
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gvamsi -d resume_gen_db"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
